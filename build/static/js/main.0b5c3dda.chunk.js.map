{
	"version":        3,
	"sources":        [
		"store/actions/actionTypes.js",
		"shared/utility.js",
		"App.js",
		"polyfill.js",
		"serviceWorker.js",
		"store/reducers/auth.js",
		"store/reducers/class.js",
		"store/reducers/member.js",
		"store/reducers/index.js",
		"index.js"
	],
	"names":          [
		"FETCH_MEMBERS_START",
		"FETCH_MEMBERS_SUCCESS",
		"FETCH_MEMBERS_FAIL",
		"CREATE_MEMBER_START",
		"CREATE_MEMBER_SUCCESS",
		"CREATE_MEMBER_FAIL",
		"UPDATE_MEMBER_START",
		"UPDATE_MEMBER_SUCCESS",
		"UPDATE_MEMBER_FAIL",
		"FETCH_CLASSES_START",
		"FETCH_CLASSES_SUCCESS",
		"FETCH_CLASSES_FAIL",
		"CREATE_CLASS_START",
		"CREATE_CLASS_SUCCESS",
		"CREATE_CLASS_FAIL",
		"UPDATE_CLASS_START",
		"UPDATE_CLASS_SUCCESS",
		"UPDATE_CLASS_FAIL",
		"LOGIN_REQUEST",
		"LOGIN_SUCCESS",
		"LOGIN_FAILURE",
		"LOGOUT_REQUEST",
		"LOGOUT_SUCCESS",
		"LOGOUT_FAILURE",
		"VERIFY_REQUEST",
		"VERIFY_SUCCESS",
		"updateObject",
		"oldObject",
		"updatedProperties",
		"updateJSONArrayById",
		"a",
		"newE",
		"map",
		"oldE",
		"id",
		"displayDate",
		"jsDate",
		"toISOString",
		"split",
		"socialClickedHandler",
		"medium",
		"domain",
		"window",
		"open",
		"focus",
		"TODAY",
		"Date",
		"isEmpty",
		"str",
		"trim",
		"DefaultLayout",
		"React",
		"lazy",
		"Login",
		"Register",
		"Page404",
		"Page500",
		"App",
		"Suspense",
		"fallback",
		"className",
		"exact",
		"path",
		"name",
		"render",
		"props",
		"Component",
		"CustomEvent",
		"event",
		"params",
		"bubbles",
		"cancelable",
		"detail",
		"undefined",
		"evt",
		"document",
		"createEvent",
		"initCustomEvent",
		"prototype",
		"Event",
		"Boolean",
		"location",
		"hostname",
		"match",
		"initialState",
		"classes",
		"isLoading",
		"firstAvailableClassId",
		"createClassStart",
		"state",
		"createClassFail",
		"action",
		"error",
		"createClassSuccess",
		"concat",
		"newClass",
		"fetchClassesStart",
		"fetchClassesFail",
		"fetchClassesSuccess",
		"updateClassStart",
		"updateClassFail",
		"updateClassSuccess",
		"updatedClass",
		"reducer",
		"type",
		"actionTypes",
		"members",
		"createMemberStart",
		"createMemberFail",
		"createMemberSuccess",
		"newMember",
		"memberData",
		"memberId",
		"updateMemberStart",
		"updateMemberFail",
		"updateMemberSuccess",
		"updatedMember",
		"fetchMembersStart",
		"fetchMembersFail",
		"fetchMembersSuccess",
		"combineReducers",
		"auth",
		"isLoggingIn",
		"isLoggingOut",
		"isVerifying",
		"loginError",
		"logoutError",
		"isAuthenticated",
		"user",
		"verifyingError",
		"member",
		"class",
		"classReducer",
		"composeEnhancers",
		"compose",
		"store",
		"createStore",
		"rootReducer",
		"applyMiddleware",
		"thunk",
		"app",
		"ReactDOM",
		"getElementById",
		"navigator",
		"serviceWorker",
		"ready",
		"then",
		"registration",
		"unregister"
	],
	"mappings":       "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",
	"file":           "static/js/main.0b5c3dda.chunk.js",
	"sourcesContent": [
		"export const FETCH_MEMBERS_START   = \"FETCH_MEMBERS_START\";\r\nexport const FETCH_MEMBERS_SUCCESS = \"FETCH_MEMBERS_SUCCESS\";\r\nexport const FETCH_MEMBERS_FAIL    = \"FETCH_MEMBERS_FAIL\";\r\n\r\nexport const CREATE_MEMBER_START   = \"CREATE_MEMBER_START\";\r\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\r\nexport const CREATE_MEMBER_FAIL    = \"CREATE_MEMBER_FAIL\";\r\n\r\nexport const UPDATE_MEMBER_START   = \"UPDATE_MEMBER_START\";\r\nexport const UPDATE_MEMBER_SUCCESS = \"UPDATE_MEMBER_SUCCESS\";\r\nexport const UPDATE_MEMBER_FAIL    = \"UPDATE_MEMBER_FAIL\";\r\n\r\nexport const FETCH_CLASSES_START   = \"FETCH_CLASSES_START\";\r\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\r\nexport const FETCH_CLASSES_FAIL    = \"FETCH_CLASSES_FAIL\";\r\n\r\nexport const CREATE_CLASS_START   = \"CREATE_CLASS_START\";\r\nexport const CREATE_CLASS_SUCCESS = \"CREATE_CLASS_SUCCESS\";\r\nexport const CREATE_CLASS_FAIL    = \"CREATE_CLASS_FAIL\";\r\n\r\nexport const UPDATE_CLASS_START   = \"UPDATE_CLASS_START\";\r\nexport const UPDATE_CLASS_SUCCESS = \"UPDATE_CLASS_SUCCESS\";\r\nexport const UPDATE_CLASS_FAIL    = \"UPDATE_CLASS_FAIL\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\n\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n",
		"export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\nexport const updateJSONArrayById = (a, newE) => {\r\n  return a.map(oldE => {\r\n    return oldE.id === newE.id ? newE : oldE;\r\n  });\r\n};\r\n\r\nexport const displayDate = jsDate => jsDate.toISOString().split(\"T\")[0];\r\n\r\n\r\nexport const socialClickedHandler = (medium, id) => {\r\n  let domain;\r\n  switch (medium) {\r\n    case \"instagram\":\r\n      domain = \"https://instagram.com/\";\r\n      break;\r\n    case \"twitter\":\r\n      domain = \"https://twitter.com/\";\r\n      break;\r\n    case \"facebook\":\r\n    default:\r\n      domain = \"https://facebook.com/\";\r\n    \r\n  }\r\n  const win = window.open(domain + id, \"_blank\");\r\n  win.focus();\r\n};\r\n\r\nexport const TODAY = new Date().toISOString().split(\"T\")[0];\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n  \r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  \r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  \r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  \r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  \r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  \r\n  return isValid;\r\n};\r\n\r\nexport const isEmpty = str => !str || str.trim() === \"\";",
		"import React, {Component} from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\n// import { renderRoutes } from 'react-router-config';\r\nimport \"./App.scss\";\r\n\r\nconst loading = () => <div\r\n  className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n// Containers\r\nconst DefaultLayout = React.lazy(() => import(\"./containers/DefaultLayout\"));\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import(\"./views/Pages/Login\"));\r\nconst Register = React.lazy(() => import(\"./views/Pages/Register\"));\r\nconst Page404 = React.lazy(() => import(\"./views/Pages/Page404\"));\r\nconst Page500 = React.lazy(() => import(\"./views/Pages/Page500\"));\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <React.Suspense fallback={loading()}>\r\n          <Switch>\r\n            <Route exact path=\"/login\" name=\"Login Page\"\r\n                   render={props => <Login {...props}/>}/>\r\n            <Route exact path=\"/register\" name=\"Register Page\"\r\n                   render={props => <Register {...props}/>}/>\r\n            <Route exact path=\"/404\" name=\"Page 404\"\r\n                   render={props => <Page404 {...props}/>}/>\r\n            <Route exact path=\"/500\" name=\"Page 500\"\r\n                   render={props => <Page500 {...props}/>}/>\r\n            <Route path=\"/\" name=\"Home\"\r\n                   render={props => <DefaultLayout {...props}/>}/>\r\n          </Switch>\r\n        </React.Suspense>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n",
		"/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport \"core-js/features/set/map\";\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\n// import 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\n// import 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\n// import 'core-js/es6/set'\r\n// import 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n  \r\n  if (typeof window.CustomEvent === \"function\") return false;\r\n  \r\n  function CustomEvent(event, params) {\r\n    params = params || {bubbles: false, cancelable: false, detail: undefined};\r\n    var evt = document.createEvent(\"CustomEvent\");\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n    return evt;\r\n  }\r\n  \r\n  CustomEvent.prototype = window.Event.prototype;\r\n  \r\n  window.CustomEvent = CustomEvent;\r\n})();\r\n",
		"// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n  ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n    \r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      \r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n        \r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n              \r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n              \r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\",\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
		"import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n} from \"../actions/actionTypes\";\r\n\r\nexport default (\r\n  state = {\r\n    isLoggingIn    : false,\r\n    isLoggingOut   : false,\r\n    isVerifying    : false,\r\n    loginError     : false,\r\n    logoutError    : false,\r\n    isAuthenticated: false,\r\n    user           : {},\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        loginError : false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingIn    : false,\r\n        isAuthenticated: true,\r\n        user           : action.user,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingIn    : false,\r\n        isAuthenticated: false,\r\n        loginError     : true,\r\n      };\r\n    case LOGOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n        logoutError : false,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut   : false,\r\n        isAuthenticated: false,\r\n        user           : {},\r\n      };\r\n    case LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        logoutError : true,\r\n      };\r\n    case VERIFY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isVerifying   : true,\r\n        verifyingError: false,\r\n      };\r\n    case VERIFY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isVerifying: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
		"import {updateJSONArrayById, updateObject} from \"../../shared/utility.js\";\r\nimport * as actionTypes from \"../actions/actionTypes.js\";\r\n\r\nconst initialState = {\r\n  classes              : [],\r\n  isLoading            : false,\r\n  firstAvailableClassId: \"\",\r\n};\r\n\r\nconst createClassStart = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\n\r\nconst createClassFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst createClassSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : state.classes.concat(action.newClass),\r\n  });\r\n};\r\n\r\nconst fetchClassesStart   = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\nconst fetchClassesFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst fetchClassesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : action.classes,\r\n  });\r\n};\r\n\r\nconst updateClassStart   = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\nconst updateClassFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst updateClassSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : updateJSONArrayById(state.classes, action.updatedClass),\r\n  });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_CLASS_START:\r\n      return createClassStart(state);\r\n    case actionTypes.CREATE_CLASS_FAIL:\r\n      return createClassFail(state, action);\r\n    case actionTypes.CREATE_CLASS_SUCCESS:\r\n      return createClassSuccess(state, action);\r\n    case actionTypes.FETCH_CLASSES_START:\r\n      return fetchClassesStart(state);\r\n    case actionTypes.FETCH_CLASSES_FAIL:\r\n      return fetchClassesFail(state, action);\r\n    case actionTypes.FETCH_CLASSES_SUCCESS:\r\n      return fetchClassesSuccess(state, action);\r\n    case actionTypes.UPDATE_CLASS_START:\r\n      return updateClassStart(state);\r\n    case actionTypes.UPDATE_CLASS_FAIL:\r\n      return updateClassFail(state, action);\r\n    case actionTypes.UPDATE_CLASS_SUCCESS:\r\n      return updateClassSuccess(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n",
		"import * as actionTypes from \"../actions/actionTypes\";\r\nimport {updateJSONArrayById, updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  members  : [],\r\n  isLoading: false,\r\n};\r\n\r\nconst createMemberStart   = state => updateObject(state, {isLoading: true});\r\nconst createMemberFail    = (state, action) => updateObject(state, {\r\n  isLoading: false,\r\n  error    : action.error,\r\n});\r\nconst createMemberSuccess = (state, action) => {\r\n  const newMember = updateObject(action.memberData, {id: action.memberId});\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    members  : state.members.concat(newMember),\r\n  });\r\n};\r\n\r\nconst updateMemberStart   = (state) => updateObject(state, {isLoading: true});\r\nconst updateMemberFail    = (state, action) => updateObject(state, {\r\n  isLoading: false,\r\n  error    : action.error,\r\n});\r\nconst updateMemberSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    members  : updateJSONArrayById(state.members, action.updatedMember),\r\n  });\r\n};\r\n\r\nconst fetchMembersStart   = state => updateObject(state, {isLoading: true});\r\nconst fetchMembersFail    = (state, action) => updateObject(state, {\r\n  isLoading: false,\r\n  error    : action.error,\r\n});\r\nconst fetchMembersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    members  : action.members,\r\n    isLoading: false,\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_MEMBER_START:\r\n      return createMemberStart(state);\r\n    case actionTypes.CREATE_MEMBER_FAIL:\r\n      return createMemberFail(state, action);\r\n    case actionTypes.CREATE_MEMBER_SUCCESS:\r\n      return createMemberSuccess(state, action);\r\n    case actionTypes.FETCH_MEMBERS_START:\r\n      return fetchMembersStart(state);\r\n    case actionTypes.FETCH_MEMBERS_FAIL:\r\n      return fetchMembersFail(state, action);\r\n    case actionTypes.FETCH_MEMBERS_SUCCESS:\r\n      return fetchMembersSuccess(state, action);\r\n    case actionTypes.UPDATE_MEMBER_START:\r\n      return updateMemberStart(state);\r\n    case actionTypes.UPDATE_MEMBER_FAIL:\r\n      return updateMemberFail(state, action);\r\n    case actionTypes.UPDATE_MEMBER_SUCCESS:\r\n      return updateMemberSuccess(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n",
		"import {combineReducers} from \"redux\";\r\nimport auth from \"./auth\";\r\nimport classReducer from \"./class\";\r\nimport member from \"./member\";\r\n\r\nexport default combineReducers({auth, member, class: classReducer});\r\n",
		"import React from \"react\";\r\nimport \"react-app-polyfill/ie11\"; // For IE 11 support\r\nimport \"react-app-polyfill/ie9\"; // For IE 9-11 support\r\nimport \"react-app-polyfill/stable\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport \"./polyfill\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootReducer from \"./store/reducers\";\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.
		
		__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
		:
		null)
		|
		|
		compose
		;
		\
		r
		\
		n
		\
		r
		\
		nconst
		store
		=
		createStore(rootReducer,
		composeEnhancers(applyMiddleware(thunk)))
		;
		\
		r
		\
		n
		\
		r
		\
		nconst
		app
		=
		(
		\
		r
		\
		n
		<Provider
		store=
		{
			store
		}
		>
		\
		r
		\
		n
		<App/>
		\
		r
		\
		n
		</Provider>
		\
		r
		\
		n)
		;
		\
		r
		\
		n
		\
		r
		\
		nReactDOM.render(app,
		document.getElementById(
		\
		"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to r
		egister() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"
	],
	"sourceRoot":     ""
}