{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\hlh-cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\hlh-cms\\\\src\\\\views\\\\HLH\\\\Members.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // eslint-disable-next-line\n\nimport { Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Pagination, PaginationItem, PaginationLink, Row, Table } from \"reactstrap\";\nimport Spinner from \"reactstrap/es/Spinner.js\";\nimport axios from \"../../shared/axios-hlh.js\";\nimport { isNotEmpty, socialClickedHandler, TODAY } from \"../../shared/utility\";\nimport * as actions from \"../../store/actions\";\nimport Modal from \"../UI/Modal\";\nvar BASE_FORM_CONTROLS = {\n  id: {\n    value: \"\"\n  },\n  socialName: {\n    value: \"\"\n  },\n  fullName: {\n    value: \"\"\n  },\n  dateRegistered: {\n    value: TODAY\n  },\n  email: {\n    value: \"\"\n  },\n  phone: {\n    value: \"\"\n  },\n  facebook: {\n    value: \"\"\n  },\n  instagram: {\n    value: \"\"\n  },\n  twitter: {\n    value: \"\"\n  }\n};\n\nvar Members =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Members, _Component);\n\n  function Members() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Members);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Members)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editing: false,\n      isEnrollingStudent: false,\n      formControls: BASE_FORM_CONTROLS,\n      availableClasses: [],\n      selectedClassId: undefined\n    };\n\n    _this.spreadOnForm = function (formData) {\n      var formControls = BASE_FORM_CONTROLS;\n      Object.keys(formData).forEach(function (field) {\n        formControls = _objectSpread({}, formControls, _defineProperty({}, field, _objectSpread({}, formControls[field], {\n          value: formData[field]\n        })));\n      });\n\n      _this.setState({\n        formControls: formControls\n      });\n    };\n\n    _this.editingStartHandler = function (id) {\n      var members = _this.props.members;\n      var focusedMember = BASE_FORM_CONTROLS;\n\n      if (id && isNotEmpty(id)) {\n        for (var i in members) {\n          if (members[i].id === id) focusedMember = members[i];\n        }\n\n        _this.spreadOnForm(focusedMember);\n      } else _this.resetFormHandler();\n\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.clearModalHandler = function () {\n      return _this.setState({\n        isEditing: false,\n        isEnrollingStudent: false,\n        formControls: BASE_FORM_CONTROLS\n      });\n    };\n\n    _this.resetFormHandler = function () {\n      return _this.setState({\n        formControls: BASE_FORM_CONTROLS\n      });\n    };\n\n    _this.formElementChangeHandler = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState({\n        formControls: _objectSpread({}, _this.state.formControls, _defineProperty({}, name, _objectSpread({}, _this.state.formControls[name], {\n          value: value\n        })))\n      });\n    };\n\n    _this.handleSelectedClassChange = function (e) {\n      _this.setState({\n        selectedClassId: e.target.value\n      });\n    };\n\n    _this.submitMemberHandler = function (e) {\n      e.preventDefault();\n      var member = {};\n\n      for (var field in _this.state.formControls) {\n        member[field] = _this.state.formControls[field].value;\n      } // Decision: Create new or Edit existing member\n\n\n      if (isNotEmpty(member.id)) {\n        _this.props.onEditMember(\"\", member);\n      } else {\n        delete member.id;\n\n        _this.props.onAddMember(\"\", member);\n      }\n\n      _this.clearModalHandler();\n\n      _this.resetFormHandler();\n\n      alert(\"Member info submitted\");\n    };\n\n    _this.startEnrollHandler = function (id) {\n      var student = _this.props.members;\n      var focusedStudent = BASE_FORM_CONTROLS;\n\n      if (id && isNotEmpty(id)) {\n        for (var i in student) {\n          if (student[i].id === id) focusedStudent = student[i];\n        }\n\n        _this.spreadOnForm(focusedStudent);\n      } else _this.resetFormHandler();\n\n      _this.setState({\n        isEnrollingStudent: true\n      });\n\n      _this.fetchAvailableClasses();\n    };\n\n    _this.fetchAvailableClasses = function () {\n      axios.get(\"/classes.json\").then(function (res) {\n        var fetchedClasses = [];\n\n        for (var key in res.data) {\n          fetchedClasses.push(_objectSpread({}, res.data[key], {\n            id: key\n          }));\n        }\n\n        _this.setState({\n          availableClasses: fetchedClasses,\n          selectedClassId: fetchedClasses[0].id\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.submitEnrollHandler = function (e) {\n      e.preventDefault();\n      var classId = _this.state.selectedClassId;\n      var studentId = _this.state.formControls.id.value;\n      console.log(studentId, classId);\n\n      _this.clearModalHandler();\n\n      _this.resetFormHandler();\n\n      axios.put(\"/classEnrollments/\" + classId + \"/\" + studentId + \".json\", {\n        isEnrolled: true,\n        hasPaid: false\n      }).then(function (res) {\n        console.log(res);\n        alert(\"Enrollment info submitted\");\n      }).catch(function (err) {\n        console.log(err);\n        alert(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Members, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchMembers(\"\", \"\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var form_member = React.createElement(Modal, {\n        show: this.state.editing,\n        modalClosed: this.clearModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Member Info\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        className: \"form-horizontal\",\n        onSubmit: this.submitMemberHandler,\n        onReset: this.resetFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Member ID\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, isNotEmpty(this.state.formControls.id.value) ? this.state.formControls.id.value : \"ID UNAVAILABLE. NEW MEMBER.\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"fullName-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Full name\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"fullName-input\",\n        name: \"fullName\",\n        required: true,\n        value: this.state.formControls.fullName.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter full name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"socialName-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Social name\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"socialName-input\",\n        name: \"socialName\",\n        required: true,\n        value: this.state.formControls.socialName.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Other members will call you\\r by this Social Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"date-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Date Registered\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        id: \"date-input\",\n        name: \"dateRegistered\",\n        value: this.state.formControls.dateRegistered.value,\n        onChange: this.formElementChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"email-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Email\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        id: \"email-input\",\n        name: \"email\",\n        required: true,\n        value: this.state.formControls.email.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter email\",\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"phone-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Phone number\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"phone-input\",\n        name: \"phone\",\n        required: true,\n        value: this.state.formControls.phone.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"facebook-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Facebook\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"facebook-input\",\n        name: \"facebook\",\n        value: this.state.formControls.facebook.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter Facebook username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"instagram-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Instagram\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"instagram-input\",\n        name: \"instagram\",\n        value: this.state.formControls.instagram.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter Instagram username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"twitter-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Twitter\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"twitter-input\",\n        name: \"twitter\",\n        value: this.state.formControls.twitter.value,\n        onChange: this.formElementChangeHandler,\n        placeholder: \"Enter Twitter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: this.clearModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), \" Cancel\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), \" Reset\"), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), \" Submit\")))))));\n      var btn_add_member = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Col, {\n        col: \"8\",\n        sm: \"6\",\n        md: \"4\",\n        xl: true,\n        className: \"mb-3 mb-xl-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        className: \"btn-square\",\n        onClick: function onClick() {\n          return _this2.editingStartHandler(\"\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), \" Add a new member\")));\n      var rows_members = Object.keys(this.props.members).map(function (mKey) {\n        return _toConsumableArray(Array(_this2.props.members[mKey]).map(function (member) {\n          var socialMedia = [\"facebook\", \"twitter\", \"instagram\"];\n          var socialProfiles = socialMedia.map(function (medium) {\n            if (isNotEmpty(member[medium])) {\n              return React.createElement(Button, {\n                key: medium + mKey,\n                className: \"btn-brand mr-1 mb-1 btn-sm btn-\" + medium,\n                onClick: function onClick() {\n                  return socialClickedHandler(medium, member[medium]);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 342\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"fa fa-\" + medium,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 347\n                },\n                __self: this\n              }));\n            }\n\n            return null;\n          });\n          return React.createElement(\"tr\", {\n            key: member.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 353\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354\n            },\n            __self: this\n          }, member.socialName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355\n            },\n            __self: this\n          }, member.fullName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }, member.dateRegistered), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357\n            },\n            __self: this\n          }, member.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 358\n            },\n            __self: this\n          }, member.phone), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 359\n            },\n            __self: this\n          }, socialProfiles), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"info\",\n            className: \"btn-pill\",\n            size: \"sm\",\n            block: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, \"Info\")), _this2.props.isAdmin && React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"success\",\n            className: \"btn-pill\",\n            size: \"sm\",\n            onClick: function onClick() {\n              return _this2.startEnrollHandler(member.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-plus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }))), _this2.props.isAdmin && React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"info\",\n            className: \"btn-pill\",\n            size: \"sm\",\n            onClick: function onClick() {\n              return _this2.editingStartHandler(member.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }, \"Edit\")));\n        }));\n      });\n      var options_classes = Object.keys(this.state.availableClasses).map(function (cKey) {\n        return _toConsumableArray(Array(_this2.state.availableClasses[cKey]).map(function (c) {\n          return React.createElement(\"option\", {\n            key: c.id,\n            value: c.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, c.className, \": \", c.dateFrom, \" to \", c.dateTo);\n        }));\n      });\n      var tbl_members = this.props.isLoading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }) : React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"table-responsive-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"List of Members\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Table, {\n        responsive: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Social Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Date Registered\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Phone No.\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Social Media\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Payment History\"), this.props.isAdmin && React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Enroll\"), this.props.isAdmin && React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Edit\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, rows_members)), React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        previous: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      })), React.createElement(PaginationItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"1\")), React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"2\")), React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"3\")), React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"4\")), React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        tag: \"button\",\n        next: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })))))));\n      var form_enrollStudent = React.createElement(Modal, {\n        show: this.state.isEnrollingStudent,\n        modalClosed: this.clearModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Member Info\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        className: \"form-horizontal\",\n        onSubmit: this.submitEnrollHandler,\n        onReset: this.resetFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"Member ID\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, isNotEmpty(this.state.formControls.id.value) ? this.state.formControls.id.value : \"ID UNAVAILABLE. NEW MEMBER.\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"fullName-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Full name\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"fullName-input\",\n        name: \"fullName\",\n        required: true,\n        readOnly: true,\n        value: this.state.formControls.fullName.value // onChange={this.formElementChangeHandler}\n        ,\n        placeholder: \"Enter full name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"socialName-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"Social name\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"socialName-input\",\n        name: \"socialName\",\n        required: true,\n        readOnly: true,\n        value: this.state.formControls.socialName.value // onChange={this.formElementChangeHandler}\n        ,\n        placeholder: \"Other members will call you\\r by this Social Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"class-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"Select a class\")), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"class-select\",\n        id: \"class-select\",\n        value: this.state.selectedClassId,\n        onChange: this.handleSelectedClassChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, options_classes))), React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: this.clearModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }), \" Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), \" Submit\")))))));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, form_member, this.props.isAdmin && btn_add_member, tbl_members, form_enrollStudent);\n    }\n  }]);\n\n  return Members;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.member.isLoading,\n    members: state.member.members,\n    isAdmin: state.auth.user.displayName === \"admin\"\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchMembers: function onFetchMembers(token, userId) {\n      return dispatch(actions.fetchMembers(token, userId));\n    },\n    onAddMember: function onAddMember(token, memberInfo) {\n      return dispatch(actions.createMember(token, memberInfo));\n    },\n    onEditMember: function onEditMember(token, memberInfo) {\n      return dispatch(actions.updateMember(token, memberInfo));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Members);","map":{"version":3,"sources":["C:/Projects/hlh-cms/src/views/HLH/Members.js"],"names":["React","Component","connect","Button","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","Label","Pagination","PaginationItem","PaginationLink","Row","Table","Spinner","axios","isNotEmpty","socialClickedHandler","TODAY","actions","Modal","BASE_FORM_CONTROLS","id","value","socialName","fullName","dateRegistered","email","phone","facebook","instagram","twitter","Members","state","editing","isEnrollingStudent","formControls","availableClasses","selectedClassId","undefined","spreadOnForm","formData","Object","keys","forEach","field","setState","editingStartHandler","members","props","focusedMember","i","resetFormHandler","isEditing","clearModalHandler","formElementChangeHandler","e","name","target","handleSelectedClassChange","submitMemberHandler","preventDefault","member","onEditMember","onAddMember","alert","startEnrollHandler","student","focusedStudent","fetchAvailableClasses","get","then","res","fetchedClasses","key","data","push","catch","err","console","log","submitEnrollHandler","classId","studentId","put","isEnrolled","hasPaid","onFetchMembers","form_member","btn_add_member","rows_members","map","mKey","Array","socialMedia","socialProfiles","medium","isAdmin","options_classes","cKey","c","className","dateFrom","dateTo","tbl_members","isLoading","form_enrollStudent","mapStateToProps","auth","user","displayName","mapDispatchToProps","dispatch","token","userId","fetchMembers","memberInfo","createMember","updateMember"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// eslint-disable-next-line\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Spinner from \"reactstrap/es/Spinner.js\";\r\nimport axios from \"../../shared/axios-hlh.js\";\r\nimport {isNotEmpty, socialClickedHandler, TODAY} from \"../../shared/utility\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nconst BASE_FORM_CONTROLS = {\r\n  id            : {\r\n    value: \"\",\r\n  },\r\n  socialName    : {\r\n    value: \"\",\r\n  },\r\n  fullName      : {\r\n    value: \"\",\r\n  },\r\n  dateRegistered: {\r\n    value: TODAY,\r\n  },\r\n  email         : {\r\n    value: \"\",\r\n  },\r\n  phone         : {\r\n    value: \"\",\r\n  },\r\n  facebook      : {\r\n    value: \"\",\r\n  },\r\n  instagram     : {\r\n    value: \"\",\r\n  },\r\n  twitter       : {\r\n    value: \"\",\r\n  },\r\n};\r\n\r\nclass Members extends Component {\r\n  state = {\r\n    editing           : false,\r\n    isEnrollingStudent: false,\r\n    formControls      : BASE_FORM_CONTROLS,\r\n    availableClasses  : [],\r\n    selectedClassId   : undefined,\r\n  };\r\n  \r\n  componentDidMount() {\r\n    this.props.onFetchMembers(\"\", \"\");\r\n  }\r\n  \r\n  spreadOnForm = formData => {\r\n    let formControls = BASE_FORM_CONTROLS;\r\n    Object.keys(formData).forEach(field => {\r\n      formControls = {\r\n        ...formControls,\r\n        [field]: {\r\n          ...formControls[field],\r\n          value: formData[field],\r\n        },\r\n      };\r\n    });\r\n    this.setState({formControls});\r\n  };\r\n  \r\n  editingStartHandler = (id) => {\r\n    const members     = this.props.members;\r\n    let focusedMember = BASE_FORM_CONTROLS;\r\n    if (id && isNotEmpty(id)) {\r\n      for (let i in members) {\r\n        if (members[i].id === id) focusedMember = members[i];\r\n      }\r\n      this.spreadOnForm(focusedMember);\r\n    } else this.resetFormHandler();\r\n    \r\n    this.setState({isEditing: true});\r\n  };\r\n  clearModalHandler   = () => this.setState({\r\n    isEditing         : false,\r\n    isEnrollingStudent: false,\r\n    formControls      : BASE_FORM_CONTROLS,\r\n  });\r\n  resetFormHandler    = () => this.setState({\r\n    formControls: BASE_FORM_CONTROLS,\r\n  });\r\n  \r\n  formElementChangeHandler = e => {\r\n    const name  = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      formControls: {\r\n        ...this.state.formControls,\r\n        [name]: {\r\n          ...this.state.formControls[name],\r\n          value,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  \r\n  handleSelectedClassChange = e => {\r\n    this.setState({selectedClassId: e.target.value});\r\n  };\r\n  \r\n  submitMemberHandler = e => {\r\n    e.preventDefault();\r\n    const member = {};\r\n    for (let field in this.state.formControls) {\r\n      member[field] = this.state.formControls[field].value;\r\n    }\r\n    \r\n    // Decision: Create new or Edit existing member\r\n    if (isNotEmpty(member.id)) {\r\n      this.props.onEditMember(\"\", member);\r\n    } else {\r\n      delete member.id;\r\n      this.props.onAddMember(\"\", member);\r\n    }\r\n    \r\n    this.clearModalHandler();\r\n    this.resetFormHandler();\r\n    alert(\"Member info submitted\");\r\n  };\r\n  \r\n  startEnrollHandler = id => {\r\n    const student      = this.props.members;\r\n    let focusedStudent = BASE_FORM_CONTROLS;\r\n    if (id && isNotEmpty(id)) {\r\n      for (let i in student) {\r\n        if (student[i].id === id) focusedStudent = student[i];\r\n      }\r\n      this.spreadOnForm(focusedStudent);\r\n    } else this.resetFormHandler();\r\n    \r\n    this.setState({isEnrollingStudent: true});\r\n    this.fetchAvailableClasses();\r\n  };\r\n  \r\n  fetchAvailableClasses = () => {\r\n    axios.get(\"/classes.json\")\r\n      .then(res => {\r\n        const fetchedClasses = [];\r\n        for (let key in res.data) {\r\n          fetchedClasses.push({\r\n            ...res.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        this.setState({\r\n          availableClasses: fetchedClasses,\r\n          selectedClassId : fetchedClasses[0].id,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  \r\n  submitEnrollHandler = e => {\r\n    e.preventDefault();\r\n    const classId   = this.state.selectedClassId;\r\n    const studentId = this.state.formControls.id.value;\r\n    console.log(studentId, classId);\r\n    \r\n    this.clearModalHandler();\r\n    this.resetFormHandler();\r\n    \r\n    axios.put(\"/classEnrollments/\" + classId + \"/\" + studentId + \".json\",\r\n      {isEnrolled: true, hasPaid: false})\r\n      .then(res => {\r\n        console.log(res);\r\n        alert(\"Enrollment info submitted\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        alert(err);\r\n      });\r\n  };\r\n  \r\n  render() {\r\n    const form_member    = (\r\n      <Modal show={this.state.editing} modalClosed={this.clearModalHandler}>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>Member Info</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form action=\"\" method=\"post\" encType=\"multipart/form-data\"\r\n                      className=\"form-horizontal\"\r\n                      onSubmit={this.submitMemberHandler}\r\n                      onReset={this.resetFormHandler}>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label>Member ID</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        {isNotEmpty(this.state.formControls.id.value)\r\n                          ? this.state.formControls.id.value\r\n                          : \"ID UNAVAILABLE. NEW MEMBER.\"}</p>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"fullName-input\">Full name</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"fullName-input\" name=\"fullName\"\r\n                             required\r\n                             value={this.state.formControls.fullName.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter full name\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"socialName-input\">Social name</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"socialName-input\"\r\n                             name=\"socialName\"\r\n                             required\r\n                             value={this.state.formControls.socialName.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Other members will call you\r\n                        by this Social Name\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"date-input\">Date Registered</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"date\" id=\"date-input\" name=\"dateRegistered\"\r\n                             value={this.state.formControls.dateRegistered.value}\r\n                             onChange={this.formElementChangeHandler}/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"email-input\">Email</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"email\" id=\"email-input\" name=\"email\" required\r\n                             value={this.state.formControls.email.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter email\"\r\n                             autoComplete=\"email\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"phone-input\">Phone number</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"phone-input\" name=\"phone\"\r\n                             required\r\n                             value={this.state.formControls.phone.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter phone number\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"facebook-input\">Facebook</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"facebook-input\" name=\"facebook\"\r\n                             value={this.state.formControls.facebook.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter Facebook username\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"instagram-input\">Instagram</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"instagram-input\" name=\"instagram\"\r\n                             value={this.state.formControls.instagram.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter Instagram username\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"twitter-input\">Twitter</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"twitter-input\" name=\"twitter\"\r\n                             value={this.state.formControls.twitter.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter Twitter username\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <Button size=\"sm\" color=\"danger\"\r\n                          onClick={this.clearModalHandler}>\r\n                    <i className=\"fa fa-ban\"/> Cancel</Button>\r\n                  <Button type=\"reset\" size=\"sm\" color=\"warning\">\r\n                    <i className=\"fa fa-ban\"/> Reset</Button>\r\n                  <Button type=\"submit\" size=\"sm\" color=\"primary\">\r\n                    <i className=\"fa fa-dot-circle-o\"/> Submit</Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n    const btn_add_member = <Row>\r\n      <Col col=\"8\" sm=\"6\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\r\n        <Button color=\"info\" className=\"btn-square\"\r\n                onClick={() => this.editingStartHandler(\"\")}>\r\n          <i className=\"fa fa-plus\"/> Add a new member\r\n        </Button>\r\n      </Col>\r\n    </Row>;\r\n    \r\n    const rows_members = Object.keys(this.props.members).map(mKey => {\r\n      return (\r\n        [...Array(this.props.members[mKey]).map(member => {\r\n          const socialMedia    = [\"facebook\", \"twitter\", \"instagram\"];\r\n          const socialProfiles = socialMedia.map(medium => {\r\n            if (isNotEmpty(member[medium])) {\r\n              return <Button\r\n                key={medium + mKey}\r\n                className={\"btn-brand mr-1 mb-1 btn-sm btn-\" + medium}\r\n                onClick={() =>\r\n                  socialClickedHandler(medium, member[medium])}>\r\n                <i className={\"fa fa-\" + medium}/>\r\n              </Button>;\r\n            }\r\n            return null;\r\n          });\r\n          return (\r\n            <tr key={member.id}>\r\n              <td>{member.socialName}</td>\r\n              <td>{member.fullName}</td>\r\n              <td>{member.dateRegistered}</td>\r\n              <td>{member.email}</td>\r\n              <td>{member.phone}</td>\r\n              <td>{socialProfiles}</td>\r\n              <td><Button color=\"info\" className=\"btn-pill\" size=\"sm\" block>\r\n                Info</Button>\r\n              </td>\r\n              {this.props.isAdmin &&\r\n              <td><Button color=\"success\" className=\"btn-pill\" size=\"sm\"\r\n                          onClick={() => this.startEnrollHandler(member.id)}>\r\n                <i className=\"fa fa-plus\"/></Button></td>}\r\n              {this.props.isAdmin &&\r\n              <td><Button color=\"info\" className=\"btn-pill\" size=\"sm\"\r\n                          onClick={() => this.editingStartHandler(member.id)}>\r\n                Edit</Button></td>}\r\n            </tr>\r\n          );\r\n        })]\r\n      );\r\n    });\r\n    \r\n    const options_classes = Object.keys(this.state.availableClasses).map(cKey => {\r\n      return (\r\n        [...Array(this.state.availableClasses[cKey]).map(c => {\r\n          return (<option\r\n            key={c.id}\r\n            value={c.id}>\r\n            {c.className}: {c.dateFrom} to {c.dateTo}\r\n          </option>);\r\n        })]\r\n      );\r\n    });\r\n    \r\n    let tbl_members = this.props.isLoading\r\n      ? <Spinner/>\r\n      : <Row>\r\n        <Col className=\"table-responsive-sm\">\r\n          <Card>\r\n            <CardHeader>\r\n              List of Members\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table responsive striped>\r\n                <thead>\r\n                <tr>\r\n                  <th>Social Name</th>\r\n                  <th>Full Name</th>\r\n                  <th>Date Registered</th>\r\n                  <th>Email</th>\r\n                  <th>Phone No.</th>\r\n                  <th>Social Media</th>\r\n                  <th>Payment History</th>\r\n                  {this.props.isAdmin && <th>Enroll</th>}\r\n                  {this.props.isAdmin && <th>Edit</th>}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {rows_members}\r\n                </tbody>\r\n              </Table>\r\n              <Pagination>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\" previous/>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink tag=\"button\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">4</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\" next/>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>;\r\n    \r\n    const form_enrollStudent = (\r\n      <Modal show={this.state.isEnrollingStudent}\r\n             modalClosed={this.clearModalHandler}>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>Member Info</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form action=\"\" method=\"post\" encType=\"multipart/form-data\"\r\n                      className=\"form-horizontal\"\r\n                      onSubmit={this.submitEnrollHandler}\r\n                      onReset={this.resetFormHandler}>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label>Member ID</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        {isNotEmpty(this.state.formControls.id.value)\r\n                          ? this.state.formControls.id.value\r\n                          : \"ID UNAVAILABLE. NEW MEMBER.\"}</p>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"fullName-input\">Full name</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"fullName-input\" name=\"fullName\"\r\n                             required readOnly\r\n                             value={this.state.formControls.fullName.value}\r\n                        // onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter full name\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"socialName-input\">Social name</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"socialName-input\"\r\n                             name=\"socialName\"\r\n                             required readOnly\r\n                             value={this.state.formControls.socialName.value}\r\n                        // onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Other members will call you\r\n                        by this Social Name\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"class-select\">Select a class</Label>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <Input type=\"select\"\r\n                             name=\"class-select\" id=\"class-select\"\r\n                             value={this.state.selectedClassId}\r\n                             onChange={this.handleSelectedClassChange}>\r\n                        {options_classes}\r\n                      </Input>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <Button size=\"sm\" color=\"danger\"\r\n                          onClick={this.clearModalHandler}>\r\n                    <i className=\"fa fa-ban\"/> Cancel</Button>\r\n                  <Button type=\"submit\" size=\"sm\" color=\"primary\">\r\n                    <i className=\"fa fa-dot-circle-o\"/> Submit</Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Modal>);\r\n    \r\n    return (\r\n      <div>\r\n        {form_member}\r\n        {this.props.isAdmin && btn_add_member}\r\n        {tbl_members}\r\n        {form_enrollStudent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.member.isLoading,\r\n    members  : state.member.members,\r\n    isAdmin  : state.auth.user.displayName === \"admin\",\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchMembers: (token, userId) => dispatch(\r\n      actions.fetchMembers(token, userId)),\r\n    onAddMember   : (token, memberInfo) => dispatch(\r\n      actions.createMember(token, memberInfo)),\r\n    onEditMember  : (token, memberInfo) => dispatch(\r\n      actions.updateMember(token, memberInfo)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Members);\r\n"]},"metadata":{},"sourceType":"module"}