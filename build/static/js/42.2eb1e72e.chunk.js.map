{
	"version":        3,
	"sources":        [
		"views/HLH/Classes.js",
		"views/UI/Backdrop.module.css",
		"views/UI/Modal.module.css",
		"views/UI/Auxi.js",
		"views/UI/Backdrop.js",
		"views/UI/Modal.js"
	],
	"names":          [
		"BASE_FORM_CONTROLS",
		"id",
		"value",
		"className",
		"dateFrom",
		"TODAY",
		"dateTo",
		"time",
		"description",
		"facebook",
		"teachers",
		"students",
		"Classes",
		"state",
		"isEditing",
		"isAttendanceVisible",
		"formControls",
		"classTeachers",
		"classStudents",
		"spreadOnForm",
		"formData",
		"Object",
		"keys",
		"forEach",
		"field",
		"setState",
		"formElementChangeHandler",
		"e",
		"name",
		"target",
		"clearModalHandler",
		"resetFormHandler",
		"formToggleHandler",
		"classes",
		"props",
		"focusedClass",
		"isEmpty",
		"i",
		"submitClassHandler",
		"preventDefault",
		"classInfo",
		"onAddClass",
		"onEditClass",
		"alert",
		"viewClassAttendance",
		"classId",
		"fetchClassStudents",
		"fetchClassTeachers",
		"axios",
		"get",
		"then",
		"res",
		"fetchedStudents",
		"key",
		"data",
		"isEnrolled",
		"student",
		"push",
		"catch",
		"console",
		"log",
		"err",
		"fetchedTeachers",
		"isAssigned",
		"teacher",
		"this",
		"onFetchClasses",
		"prevProps",
		"prevState",
		"snapshot",
		"form_class",
		"show",
		"modalClosed",
		"action",
		"method",
		"encType",
		"onSubmit",
		"onReset",
		"row",
		"md",
		"xs",
		"htmlFor",
		"type",
		"required",
		"onChange",
		"placeholder",
		"rows",
		"size",
		"color",
		"onClick",
		"btn_addClass",
		"col",
		"sm",
		"xl",
		"rows_classes",
		"map",
		"cKey",
		"Array",
		"c",
		"socialClickedHandler",
		"block",
		"isAdmin",
		"rows_students",
		"sKey",
		"s",
		"parseInt",
		"socialName",
		"fullName",
		"phone",
		"email",
		"hasPaid",
		"pill",
		"rows_teachers",
		"tKey",
		"t",
		"tbl_classes",
		"isLoading",
		"responsive",
		"striped",
		"tag",
		"previous",
		"active",
		"next",
		"tbl_classAttendance",
		"Component",
		"connect",
		"class",
		"auth",
		"user",
		"displayName",
		"dispatch",
		"token",
		"userId",
		"actions",
		"module",
		"exports",
		"auxi",
		"children",
		"backdrop",
		"Backdrop",
		"clicked",
		"Modal",
		"nextProps",
		"nextState",
		"Auxi",
		"style",
		"transform",
		"opacity"
	],
	"mappings":       "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",
	"file":           "static/js/42.2eb1e72e.chunk.js",
	"sourcesContent": [
		"import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"../../shared/axios-hlh.js\";\r\nimport {isEmpty, socialClickedHandler, TODAY} from \"../../shared/utility.js\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Modal from \"../UI/Modal.js\";\r\n\r\nconst BASE_FORM_CONTROLS = {\r\n  id         : {\r\n    value: \"\",\r\n  },\r\n  className  : {\r\n    value: \"\",\r\n  },\r\n  dateFrom   : {\r\n    value: TODAY,\r\n  },\r\n  dateTo     : {\r\n    value: TODAY,\r\n  },\r\n  time       : {\r\n    value: \"\",\r\n  },\r\n  description: {\r\n    value: \"\",\r\n  },\r\n  facebook   : {\r\n    value: \"\",\r\n  },\r\n  teachers   : {\r\n    value: [],\r\n  },\r\n  students   : {\r\n    value: [],\r\n  },\r\n};\r\n\r\nclass Classes extends Component {\r\n  state = {\r\n    isEditing          : false,\r\n    isAttendanceVisible: false,\r\n    formControls       : BASE_FORM_CONTROLS,\r\n    classTeachers      : [],\r\n    classStudents      : [],\r\n  };\r\n  \r\n  componentDidMount() {\r\n    this.props.onFetchClasses(\"\", \"\");\r\n    // console.log(\"Classes state\", this.props.classes);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    // if (!this.props.isLoading && prevProps.isLoading) {\r\n    //   this.props.onFetchClasses(\"\", \"\");\r\n    // }\r\n  }\r\n  \r\n  spreadOnForm             = formData => {\r\n    let formControls = BASE_FORM_CONTROLS;\r\n    Object.keys(formData).forEach(field => {\r\n      formControls = {\r\n        ...formControls,\r\n        [field]: {\r\n          ...formControls[field],\r\n          value: formData[field],\r\n        },\r\n      };\r\n    });\r\n    this.setState({formControls});\r\n  };\r\n  formElementChangeHandler = e => {\r\n    const name  = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      formControls: {\r\n        ...this.state.formControls,\r\n        [name]: {\r\n          ...this.state.formControls[name],\r\n          value,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  \r\n  \r\n  clearModalHandler = () => this.setState({\r\n    isEditing          : false,\r\n    isAttendanceVisible: false,\r\n  });\r\n  resetFormHandler  = () => this.setState({\r\n    formControls: BASE_FORM_CONTROLS,\r\n  });\r\n  formToggleHandler = (id) => {\r\n    const classes    = this.props.classes;\r\n    let focusedClass = BASE_FORM_CONTROLS;\r\n    if (id && !isEmpty(id)) {\r\n      for (let i in classes) {\r\n        if (classes[i].id === id) focusedClass = classes[i];\r\n      }\r\n      this.spreadOnForm(focusedClass);\r\n    } else this.resetFormHandler();\r\n  \r\n    this.setState({isEditing: !this.state.isEditing});\r\n  };\r\n  \r\n  submitClassHandler = e => {\r\n    e.preventDefault();\r\n    const classInfo = {};\r\n    for (let field in this.state.formControls) {\r\n      classInfo[field] = this.state.formControls[field].value;\r\n    }\r\n    \r\n    // Decision: Create New or Edit Existing member\r\n    if (!isEmpty(classInfo.id)) this.props.onEditClass(\"\", classInfo);\r\n    else this.props.onAddClass(\"\", classInfo);\r\n  \r\n    this.clearModalHandler();\r\n    this.resetFormHandler();\r\n    alert(\"Class info submitted\");\r\n  };\r\n  \r\n  viewClassAttendance = classId => {\r\n    this.fetchClassStudents(classId);\r\n    this.fetchClassTeachers(classId);\r\n  };\r\n  \r\n  fetchClassStudents = classId => {\r\n    axios.get(\"/classEnrollments/\" + classId + \".json\")\r\n      .then(res => {\r\n        const fetchedStudents = [];\r\n        for (let key in res.data) {\r\n          if (res.data[key].isEnrolled) {\r\n            let student = {id: key, ...res.data[key]};\r\n            axios.get(\"/members/\" + key + \".json\")\r\n              .then(res => {\r\n                student = {...student, ...res.data};\r\n                fetchedStudents.push(student);\r\n                this.setState({\r\n                  classStudents      : fetchedStudents,\r\n                  isAttendanceVisible: true,\r\n                });\r\n                \r\n              }).catch(e => console.log(e));\r\n          }\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  fetchClassTeachers = classId => {\r\n    axios.get(\"/classAssignments/\" + classId + \".json\")\r\n      .then(res => {\r\n        const fetchedTeachers = [];\r\n        for (let key in res.data) {\r\n          if (res.data[key].isAssigned) {\r\n            let teacher = {id: key, ...res.data[key]};\r\n            axios.get(\"/members/\" + key + \".json\")\r\n              .then(res => {\r\n                teacher = {...teacher, ...res.data};\r\n                fetchedTeachers.push(teacher);\r\n                this.setState({\r\n                  classTeachers      : fetchedTeachers,\r\n                  isAttendanceVisible: true,\r\n                });\r\n              }).catch(err => console.log(err));\r\n          }\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  \r\n  render() {\r\n    const form_class = (\r\n      <Modal show={this.state.isEditing} modalClosed={this.clearModalHandler}>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>Class Info</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form action=\"\" method=\"post\" encType=\"multipart/form-data\"\r\n                      className=\"form-horizontal\"\r\n                      onSubmit={this.submitClassHandler}\r\n                      onReset={this.resetFormHandler}>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label>Class ID</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        {isEmpty(this.state.formControls.id.value)\r\n                          ? \"ID UNAVAILABLE. NEW CLASS.\"\r\n                          : this.state.formControls.id.value}</p>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"className-input\">Class Name</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"className-input\" name=\"className\"\r\n                             required\r\n                             value={this.state.formControls.className.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter full name\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"dateFrom-input\">From</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"date\" id=\"dateFrom-input\"\r\n                             name=\"dateFrom\"\r\n                             required\r\n                             value={this.state.formControls.dateFrom.value}\r\n                             onChange={this.formElementChangeHandler}/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"dateTo-input\">To</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"date\" id=\"dateTo-input\" name=\"dateTo\"\r\n                             value={this.state.formControls.dateTo.value}\r\n                             onChange={this.formElementChangeHandler}/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"time-input\">Weekly schedule</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"time-input\" name=\"time\" required\r\n                             value={this.state.formControls.time.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter the weekly\r\n                             time slot for this class\"\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"description-input\">Textarea</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"textarea\" name=\"description\"\r\n                             id=\"description-input\" rows=\"9\"\r\n                             value={this.state.formControls.description.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Description about the class...\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"facebook-input\">Facebook</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"facebook-input\" name=\"facebook\"\r\n                             value={this.state.formControls.facebook.value}\r\n                             onChange={this.formElementChangeHandler}\r\n                             placeholder=\"Enter Facebook event link\"/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Button size=\"sm\" color=\"danger\"\r\n                            onClick={this.clearModalHandler}>\r\n                      <i className=\"fa fa-ban\"/> Cancel</Button>\r\n                    <Button type=\"reset\" size=\"sm\" color=\"warning\">\r\n                      <i className=\"fa fa-ban\"/> Reset</Button>\r\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\">\r\n                      <i className=\"fa fa-dot-circle-o\"/> Submit</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  \r\n    const btn_addClass = <Row>\r\n      <Col col=\"8\" sm=\"6\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\r\n        <Button color=\"info\" className=\"btn-square\"\r\n                onClick={() => this.formToggleHandler(\"\")}>\r\n          <i className=\"fa fa-plus\"/> Add a new class\r\n        </Button>\r\n      </Col>\r\n    </Row>;\r\n    \r\n    const rows_classes = Object.keys(this.props.classes).map(cKey => {\r\n      return ([...Array(this.props.classes[cKey]).map(c => {\r\n        return (<tr key={c.id}>\r\n          <td>{c.className}</td>\r\n          <td>{c.time}</td>\r\n          <td>{c.dateFrom}</td>\r\n          <td>{c.dateTo}</td>\r\n          <td>{c.description}</td>\r\n          <td><Button\r\n            className={\"btn-brand mr-1 mb-1 btn-sm btn-facebook\"}\r\n            onClick={() =>\r\n              socialClickedHandler(\"facebook\", c.facebook)}>\r\n            <i className={\"fa fa-facebook\"}/>\r\n          </Button></td>\r\n          <td><Button color=\"info\" className=\"btn-pill\" size=\"sm\" block\r\n                      onClick={() => this.viewClassAttendance(c.id)}>\r\n            View</Button></td>\r\n          {this.props.isAdmin && <td><Button color=\"info\" className=\"btn-pill\" size=\"sm\"\r\n                      onClick={() => this.formToggleHandler(c.id)}>\r\n            Edit</Button></td>}\r\n        </tr>);\r\n      })]);\r\n    });\r\n  \r\n    const rows_students = Object.keys(this.state.classStudents).map(sKey => {\r\n      return ([...Array(this.state.classStudents[sKey]).map(s => {\r\n          return (<tr key={s.id}>\r\n            <td>{parseInt(sKey) + 1}</td>\r\n            <td>{s.socialName}</td>\r\n            <td>{s.fullName}</td>\r\n            <td>{s.phone}</td>\r\n            <td>{s.email}</td>\r\n            <td>{s.hasPaid\r\n              ? <Badge className=\"mr-1\" color=\"success\" pill>Paid</Badge>\r\n              : <Badge className=\"mr-1\" color=\"warning\" pill>Pending</Badge>}\r\n            </td>\r\n          </tr>);\r\n        })]\r\n      );\r\n    });\r\n  \r\n    const rows_teachers = Object.keys(this.state.classTeachers).map(tKey => {\r\n      return ([...Array(this.state.classTeachers[tKey]).map(t => {\r\n          return (<tr key={t.id}>\r\n            <td>{parseInt(tKey) + 1}</td>\r\n            <td>{t.socialName}</td>\r\n            <td>{t.fullName}</td>\r\n            <td>{t.phone}</td>\r\n            <td>{t.email}</td>\r\n            <td>{t.hasPaid\r\n              ? <Badge className=\"mr-1\" color=\"success\" pill>Paid</Badge>\r\n              : <Badge className=\"mr-1\" color=\"warning\" pill>Pending</Badge>}\r\n            </td>\r\n          </tr>);\r\n        })]\r\n      );\r\n    });\r\n  \r\n    const tbl_classes = this.props.isLoading\r\n      ? <Spinner/>\r\n      : <Row>\r\n        <Col className=\"table-responsive-sm\">\r\n          <Card>\r\n            <CardHeader>\r\n              List of Classes\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table responsive striped>\r\n                <thead>\r\n                <tr>\r\n                  <th>Class name</th>\r\n                  <th>Time</th>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Description</th>\r\n                  <th>Facebook</th>\r\n                  <th>Attendance</th>\r\n                  {this.props.isAdmin && <th>Edit</th>}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {rows_classes}\r\n                </tbody>\r\n              </Table>\r\n              <Pagination>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\" previous/>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink tag=\"button\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\">4</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink tag=\"button\" next/>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>;\r\n  \r\n    const tbl_classAttendance = (\r\n      <Modal show={this.state.isAttendanceVisible}\r\n             modalClosed={this.clearModalHandler}>\r\n        <Row>\r\n          <Col className=\"table-responsive-sm\">\r\n            <Card>\r\n              <CardHeader>\r\n                Teachers\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive striped>\r\n                  <thead>\r\n                  <tr>\r\n                    <th>Index</th>\r\n                    <th>Social name</th>\r\n                    <th>Full name</th>\r\n                    <th>Phone</th>\r\n                    <th>Email</th>\r\n                    <th>Payment status</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {rows_teachers}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"table-responsive-sm\">\r\n            <Card>\r\n              <CardHeader>\r\n                Students\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive striped>\r\n                  <thead>\r\n                  <tr>\r\n                    <th>Index</th>\r\n                    <th>Social name</th>\r\n                    <th>Full name</th>\r\n                    <th>Phone</th>\r\n                    <th>Email</th>\r\n                    <th>Payment status</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {rows_students}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Modal>);\r\n    \r\n    return (<div>\r\n      {form_class}\r\n      {this.props.isAdmin && btn_addClass}\r\n      {tbl_classes}\r\n      {tbl_classAttendance}\r\n    </div>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.class.isLoading,\r\n    classes  : state.class.classes,\r\n    isAdmin: state.auth.user.displayName === 'admin'\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchClasses: (token, userId) => dispatch(\r\n      actions.fetchClasses(token, userId)),\r\n    onAddClass    : (token, classInfo) => dispatch(\r\n      actions.createClass(token, classInfo)),\r\n    onEditClass   : (token, classInfo) => dispatch(\r\n      actions.updateClass(token, classInfo),\r\n    )\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\r\n",
		"// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3yh_S\"};",
		"// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__P0xtN\"};",
		"const auxi = (props) => props.children;\r\n\r\nexport default auxi;\r\n",
		"import React from \"react\";\r\n\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) => (\r\n  props.show\r\n    ? <div className={classes.Backdrop} onClick={props.clicked}/>\r\n    : null\r\n);\r\n\r\nexport default backdrop;\r\n",
		"import React, {Component} from \"react\";\r\nimport Auxi from \"./Auxi\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nclass Modal extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.show !== this.props.show || nextProps.children !== this
		
		.props.children
		;
		\
		r
		\
		n
		}
		\
		r
		\
		n
		\
		r
		\
		n
		render()
		{
			\
		r
		\
		n
		return
		(
		\
		r
		\
		n
		<Auxi>
		\
		r
		\
		n
		<Backdrop
		show=
		{
			this.props.show
		}
		clicked=
		{
			this.props.modalClosed
		}
		/>
		\
		r
		\
		n
		<div
		\
		r
		\
		n
		className=
		{
			classes.Modal
		}
		\
		r
		\
		n
		style=
		{
		{
			\
		r
		\
		n
		transform
		:
		this.props.show
		?
		\
		"translateY(0)\" : \"translateY(-700vh)\",\r\n            opacity  : this.props.show ? \"1\" : \"0\",\r\n          }}>\r\n
		{this.props.children}\r\n        </div>\r\n      </Auxi>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n"
	],
	"sourceRoot":     ""
}