{"ast":null,"code":"import { updateJSONArrayById, updateObject } from \"../../shared/utility.js\";\nimport * as actionTypes from \"../actions/actionTypes.js\";\nvar initialState = {\n  classes: [],\n  isLoading: false,\n  firstAvailableClassId: \"\"\n};\n\nvar createClassStart = function createClassStart(state) {\n  return updateObject(state, {\n    isLoading: true\n  });\n};\n\nvar createClassFail = function createClassFail(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    error: action.error\n  });\n};\n\nvar createClassSuccess = function createClassSuccess(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    classes: state.classes.concat(action.newClass)\n  });\n};\n\nvar fetchClassesStart = function fetchClassesStart(state) {\n  return updateObject(state, {\n    isLoading: true\n  });\n};\n\nvar fetchClassesFail = function fetchClassesFail(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    error: action.error\n  });\n};\n\nvar fetchClassesSuccess = function fetchClassesSuccess(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    classes: action.classes\n  });\n};\n\nvar updateClassStart = function updateClassStart(state) {\n  return updateObject(state, {\n    isLoading: true\n  });\n};\n\nvar updateClassFail = function updateClassFail(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    error: action.error\n  });\n};\n\nvar updateClassSuccess = function updateClassSuccess(state, action) {\n  return updateObject(state, {\n    isLoading: false,\n    classes: updateJSONArrayById(state.classes, action.updatedClass)\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CREATE_CLASS_START:\n      return createClassStart(state);\n\n    case actionTypes.CREATE_CLASS_FAIL:\n      return createClassFail(state, action);\n\n    case actionTypes.CREATE_CLASS_SUCCESS:\n      return createClassSuccess(state, action);\n\n    case actionTypes.FETCH_CLASSES_START:\n      return fetchClassesStart(state);\n\n    case actionTypes.FETCH_CLASSES_FAIL:\n      return fetchClassesFail(state, action);\n\n    case actionTypes.FETCH_CLASSES_SUCCESS:\n      return fetchClassesSuccess(state, action);\n\n    case actionTypes.UPDATE_CLASS_START:\n      return updateClassStart(state);\n\n    case actionTypes.UPDATE_CLASS_FAIL:\n      return updateClassFail(state, action);\n\n    case actionTypes.UPDATE_CLASS_SUCCESS:\n      return updateClassSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Projects/hlh-cms/src/store/reducers/class.js"],"names":["updateJSONArrayById","updateObject","actionTypes","initialState","classes","isLoading","firstAvailableClassId","createClassStart","state","createClassFail","action","error","createClassSuccess","concat","newClass","fetchClassesStart","fetchClassesFail","fetchClassesSuccess","updateClassStart","updateClassFail","updateClassSuccess","updatedClass","reducer","type","CREATE_CLASS_START","CREATE_CLASS_FAIL","CREATE_CLASS_SUCCESS","FETCH_CLASSES_START","FETCH_CLASSES_FAIL","FETCH_CLASSES_SUCCESS","UPDATE_CLASS_START","UPDATE_CLASS_FAIL","UPDATE_CLASS_SUCCESS"],"mappings":"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","sourcesContent":["import {updateJSONArrayById, updateObject} from \"../../shared/utility.js\";\r\nimport * as actionTypes from \"../actions/actionTypes.js\";\r\n\r\nconst initialState = {\r\n  classes              : [],\r\n  isLoading            : false,\r\n  firstAvailableClassId: \"\",\r\n};\r\n\r\nconst createClassStart = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\n\r\nconst createClassFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst createClassSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : state.classes.concat(action.newClass),\r\n  });\r\n};\r\n\r\nconst fetchClassesStart   = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\nconst fetchClassesFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst fetchClassesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : action.classes,\r\n  });\r\n};\r\n\r\nconst updateClassStart   = (state) => {\r\n  return updateObject(state, {isLoading: true});\r\n};\r\nconst updateClassFail    = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    error    : action.error,\r\n  });\r\n};\r\nconst updateClassSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    isLoading: false,\r\n    classes  : updateJSONArrayById(state.classes, action.updatedClass),\r\n  });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_CLASS_START:\r\n      return createClassStart(state);\r\n    case actionTypes.CREATE_CLASS_FAIL:\r\n      return createClassFail(state, action);\r\n    case actionTypes.CREATE_CLASS_SUCCESS:\r\n      return createClassSuccess(state, action);\r\n    case actionTypes.FETCH_CLASSES_START:\r\n      return fetchClassesStart(state);\r\n    case actionTypes.FETCH_CLASSES_FAIL:\r\n      return fetchClassesFail(state, action);\r\n    case actionTypes.FETCH_CLASSES_SUCCESS:\r\n      return fetchClassesSuccess(state, action);\r\n    case actionTypes.UPDATE_CLASS_START:\r\n      return updateClassStart(state);\r\n    case actionTypes.UPDATE_CLASS_FAIL:\r\n      return updateClassFail(state, action);\r\n    case actionTypes.UPDATE_CLASS_SUCCESS:\r\n      return updateClassSuccess(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}